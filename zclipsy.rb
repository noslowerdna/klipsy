require 'yaml'

def getVideoId(line)
  line.split(' ')[0]
end

def getStartTime(line)
  line.split(' ')[1]
end

def getDescrip(line)
  line.split(' ', 3)[2].strip
end

def getSeconds(time)
  ((time.split(':')[0]).to_i * 60) + (time.split(':')[1]).to_i
end

def getTimeString(seconds)
  (seconds / 60).to_s + ':' + (seconds % 60).to_s.rjust(2, '0')
end

def scaleSpeed(seconds, scale)
  seconds % scale == 0 ? seconds / scale : (seconds + scale - 1) / scale
end

BASE_DIR = File.dirname(__FILE__)

configFile = File.join(BASE_DIR, 'zclipsy.yaml')
config = File.exist?(configFile) ? File.open(configFile) { |f| YAML::load(f) } : {}

VIDEOS_FILE = File.join(BASE_DIR, config['videos'] ? config['videos'] : 'videos.txt')
CLIPS_FILE = File.join(BASE_DIR, config['clips'] ? config['clips'] : 'clips.txt')
TITLE = config['title'] ? config['title'] : 'Generated by ZClipsy'
SCALE_SPEED = config['speed'] ? config['speed'] : 1

PAGE_PREFIX_FILE = File.join(BASE_DIR, 'pageprefix.txt')
PAGE_SUFFIX_FILE = File.join(BASE_DIR, 'pagesuffix.txt')
JS_FILE = File.join(BASE_DIR, 'cliptable.js')
HTML_FILE = File.join(BASE_DIR, 'index.html')

raise 'videos file not found: ' + VIDEOS_FILE if !File.exist?(VIDEOS_FILE)
raise 'clips file not found: ' + CLIPS_FILE if !File.exist?(CLIPS_FILE)
raise 'invalid speed: ' + SCALE_SPEED if SCALE_SPEED == 0

dates = {}
links = {}
durations = {}

js = []
html = []

File.open(VIDEOS_FILE) do |file|
  file.each do |line|
    next if line.strip.empty?
    parts = line.split(' ')
    raise 'invalid video: ' + line if parts.length != 4

    dates[parts[0]] = parts[1]
    links[parts[0]] = parts[2]
    durations[parts[0]] = parts[3]
  end
end

File.open(PAGE_PREFIX_FILE) do |file|
  file.each do |line|
    line.delete!("\r")
    line.sub!('PAGE_TITLE', TITLE) if line.include?('PAGE_TITLE')
    html << line unless line.strip.empty?
  end
end

js << 'var cp = ""; setInterval(function(){'
js << '$(".tablediv .count .value").html(clipList.matchingItems.length.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ","));'

lines = []
File.open(CLIPS_FILE) do |file|
  file.reject {|line| line.strip.empty? }.each do |line|
    lines << line
  end
end

lines.each_with_index do |line, i|
  id = getVideoId(line)
  raise 'unknown video id: ' + id unless links.has_key?(id)

  nextLine = i < lines.length - 1 ? lines[i + 1] : lines[0]
  nextId = getVideoId(nextLine)
  descrip = getDescrip(line)
  startTime = getStartTime(line)
  startSecs = getSeconds(startTime)

  endSecs = id == nextId ? getSeconds(getStartTime(nextLine)) : getSeconds(durations[id])

  durationSecs = endSecs - startSecs
  fastDurationSecs = scaleSpeed(durationSecs, SCALE_SPEED)
  slowDurationSecs = scaleSpeed(2 * durationSecs, SCALE_SPEED)
  superSlowDurationSecs = scaleSpeed(4 * durationSecs, SCALE_SPEED)

  slowDuration = getTimeString(slowDurationSecs)
  superSlowDuration = getTimeString(superSlowDurationSecs)
  fastDuration = getTimeString(fastDurationSecs)
  baseLink = id + '-' + startTime.sub(':', '-')
  fastLink = baseLink + '-'
  slowLink = baseLink + '--'
  superSlowLink = baseLink + '---'

  highlightCurrentlyPlaying = 'var e = document.getElementById(cp); if (e != null) e.className = "np"; ' +
    'cp = "tr' + (i + 1).to_s + '"; document.getElementById(cp).className = "p"; '

  js << '$(\'#' + fastLink + '\').click(function(){ ' + highlightCurrentlyPlaying + 'load(\'' + links[id] + '\',' + startSecs.to_s +
    ',' + (startSecs + durationSecs).to_s + ',' + SCALE_SPEED.to_s + '); return false; });'
  js << '$(\'#' + slowLink + '\').click(function(){ ' + highlightCurrentlyPlaying + 'load(\'' + links[id] + '\',' + startSecs.to_s +
    ',' + (startSecs + durationSecs).to_s + ',' + (0.5 * SCALE_SPEED).to_s + '); return false; });'
  js << '$(\'#' + superSlowLink + '\').click(function(){ ' + highlightCurrentlyPlaying + 'load(\'' + links[id] + '\',' + startSecs.to_s +
    ',' + (startSecs + durationSecs).to_s + ',' + (0.25 * SCALE_SPEED).to_s + '); return false; });'

  html << '<tr class="np" id="tr' + (i + 1).to_s + '">' +
    '<td class="video" title="' + id + ' (' + dates[id] + ')">' + id + '</td>' +
    '<td class="start">' + startTime + '</td>' +
    '<td class="playfast" style="width:75px;"><a id="' + fastLink + '" href="#">&#9654;&nbsp;(' + fastDuration + ')</a></td>' +
    '<td class="playslow" style="width:75px;"><a id="' + slowLink + '" href="#">&#189;&#9654;&nbsp;(' + slowDuration + ')</a></td>' +
    '<td class="playsuperslow" style="width:75px;"><a id="' + superSlowLink + '" href="#">&#188;&#9654;&nbsp;(' + superSlowDuration + ')</a></td>' +
    '<td class="descrip" style="width:800px;">' + descrip + '</td>' +
    '<td class="duration" hidden="true">' + slowDurationSecs.to_s + '</td>' + # for sorting by duration
    '<td class="date" hidden="true">' + dates[id] + '</td>' + # for searching by month/year
    '</tr>'
end

js << '}, 2345); // Because science!'

File.open(PAGE_SUFFIX_FILE) do |file|
  file.each do |line|
    line.delete!("\r")
    html << line unless line.strip.empty?
  end
end

File.open(JS_FILE, 'w+') do |file|
  file.puts(js)
end
puts "Successfully generated #{JS_FILE}"

File.open(HTML_FILE, 'w+') do |file|
  file.puts(html)
end
puts "Successfully generated #{HTML_FILE}"
